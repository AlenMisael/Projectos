#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#define TAMANIO 100

int buffer[TAMANIO]; 
long i; 
int activoConsumidor = 0; 
int valor; 
pthread_t hilo1, hilo2; 

void *hilo_productor (void *arg) 
{   
     for ( i = 0; i < TAMANIO; i++) 
     {
      
       /*if (i == TAMANIO) 
       {
         i = 0; 
       }
       */
       valor = rand() % 100; 
       buffer[i] = valor; 
       activoConsumidor = 1; 
       printf ("El valor en la posicion %ld es de %d\n", i, buffer[i]); 
     }
    pthread_exit (NULL); 
}


void *hilo_consumidor(void *arg) 
{ 
  if (activoConsumidor == 1)  
  {
     for (long t = 0; t < TAMANIO; t++) 
     {
       /*
       if (i == TAMANIO) 
       {
         i = 0; 
       }
       */
       printf ("El valor leido en la posicion %ld es de : %d\n", t, buffer[t]); 
     }
  }   
  pthread_exit (NULL);   
}

int main(int argc, char *argv[])
{
    int  rc1,rc2;
    srand(time(NULL));
    rc1 = pthread_create(&hilo1, NULL, hilo_productor, NULL); 
    rc2 = pthread_create(&hilo2, NULL, hilo_consumidor, NULL); 
    if (rc1 != 0 || rc2 != 0) 
    {
      return -1; 
    }
    pthread_exit (NULL); 
}

